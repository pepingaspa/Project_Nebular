/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pfe.nebular.client;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class Client extends javax.swing.JFrame {

    DataOutputStream out;
    public Client() {
        initComponents();
    }

    Socket socket;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArpPanel = new javax.swing.JPanel();
        ArpIpLabel = new javax.swing.JLabel();
        ArpIpText = new javax.swing.JTextField();
        ArpPortLabel = new javax.swing.JLabel();
        ArpPortText = new javax.swing.JTextField();
        ArpButton = new javax.swing.JButton();
        MsgPanel = new javax.swing.JPanel();
        MsgLabel = new javax.swing.JLabel();
        MsgText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));
        setSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new java.awt.CardLayout());

        ArpIpLabel.setText("Enter Server Ip :");

        ArpPortLabel.setText("Enter Server Port");

        ArpButton.setText("Reach");
        ArpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ArpPanelLayout = new javax.swing.GroupLayout(ArpPanel);
        ArpPanel.setLayout(ArpPanelLayout);
        ArpPanelLayout.setHorizontalGroup(
            ArpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArpPanelLayout.createSequentialGroup()
                .addGroup(ArpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ArpPanelLayout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(ArpIpLabel))
                    .addGroup(ArpPanelLayout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addGroup(ArpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ArpPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ArpPortText)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ArpPanelLayout.createSequentialGroup()
                                .addComponent(ArpButton)
                                .addGap(17, 17, 17))))
                    .addGroup(ArpPanelLayout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(ArpIpText, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        ArpPanelLayout.setVerticalGroup(
            ArpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArpPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(ArpIpLabel)
                .addGap(36, 36, 36)
                .addComponent(ArpIpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(ArpPortLabel)
                .addGap(65, 65, 65)
                .addComponent(ArpPortText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ArpButton)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        getContentPane().add(ArpPanel, "card2");

        MsgText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MsgTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MsgPanelLayout = new javax.swing.GroupLayout(MsgPanel);
        MsgPanel.setLayout(MsgPanelLayout);
        MsgPanelLayout.setHorizontalGroup(
            MsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MsgPanelLayout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addGroup(MsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MsgPanelLayout.createSequentialGroup()
                        .addComponent(MsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MsgPanelLayout.createSequentialGroup()
                        .addComponent(MsgText, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))))
        );
        MsgPanelLayout.setVerticalGroup(
            MsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MsgPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(MsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(MsgText, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(297, Short.MAX_VALUE))
        );

        getContentPane().add(MsgPanel, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ArpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArpButtonActionPerformed
        String ip = ArpIpText.getText();
        String port = ArpPortText.getText();
        connectToServer(ip, port);
    }//GEN-LAST:event_ArpButtonActionPerformed

    private void MsgTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MsgTextActionPerformed
        try {
            out.writeUTF(MsgText.getText());
            out.flush();
        } catch (IOException ex) {
            System.out.println("writing failed");
        }
        
    }//GEN-LAST:event_MsgTextActionPerformed

    
    
    public void connectToServer(String tmpIp, String tmpPort){
        
        int port;
        if(!tmpPort.isEmpty()){
            port = tryParse(tmpPort);
        }else{
            port = 5000;
        }
        
        try {
            socket = new Socket(tmpIp, port);
            System.out.println("Connextion achieve");
            ArpPanel.setVisible(false);
            MsgPanel.setVisible(true);
            out = new DataOutputStream(socket.getOutputStream());
            ThreadListening listening = new ThreadListening(socket, MsgText, MsgLabel);
            listening.start();
            
        } catch (IOException ex) {
            System.out.println("Can not connet to the server !");
        }
        
    }
    
    
    public static Integer tryParse(String text) {
        try {
            return Integer.parseInt(text);
        } catch (NumberFormatException e) {
            return 0;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ArpButton;
    private javax.swing.JLabel ArpIpLabel;
    private javax.swing.JTextField ArpIpText;
    private javax.swing.JPanel ArpPanel;
    private javax.swing.JLabel ArpPortLabel;
    private javax.swing.JTextField ArpPortText;
    private javax.swing.JLabel MsgLabel;
    private javax.swing.JPanel MsgPanel;
    private javax.swing.JTextField MsgText;
    // End of variables declaration//GEN-END:variables
}
